{"version":3,"sources":["services/notes.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","put","delete","Filter","handleFilter","filter","onChange","value","PersonForm","addPerson","handleNewName","newName","handleNewNumber","newNumber","onSubmit","type","Persons","persons","deletePerson","person","name","toLowerCase","includes","map","key","number","onClick","Notification","message","isSuccesful","className","App","useState","setPersons","setNewName","setNewNumber","setFilter","notificationMessage","setNotificationMessage","isNotificationSuccesful","setIsNotificationSuccesful","useEffect","noteService","then","response","data","event","target","preventDefault","some","window","confirm","personToUpdate","find","catch","updatePerson","concat","setTimeout","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ee1459d.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n  return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n}\n\nexport default { getAll, create, update, remove };","import React from \"react\";\n\nconst Filter = ({handleFilter, filter}) => {\n\n  return (\n    <div>\n      filter shown with <input onChange={handleFilter} value={filter} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({addPerson, handleNewName, newName, handleNewNumber, newNumber}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input onChange={handleNewName} value={newName} />\n      </div>\n      <div>\n        number: <input onChange={handleNewNumber} value={newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Persons = ({ persons, filter, deletePerson }) => {\n  return persons\n    .filter((person) =>\n      person.name.toLowerCase().includes(filter.toLowerCase())\n    )\n    .map((person) => (\n      <p key={person.name}>\n        {person.name} {person.number} {\" \"}\n        <button onClick={() => deletePerson(person)} >delete</button>\n      </p>\n    ));\n};\n\nexport default Persons;\n","import React from 'react'\n\nconst Notification = ({ message, isSuccesful }) => {\n  if (message === null) {\n    return null\n  }\n  // console.log(`error ${isSuccesful ? \"succesful\" : \"error\"}`)\n  return (\n    <div className={`notification ${isSuccesful ? \"succesful\" : \"error\"}`}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\nimport \"./index.css\";\n\nimport noteService from \"./services/notes\";\n\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport Notification from \"./components/Notification\";\n// import notes from \"./services/notes\";\n\nconst App = () => {\n  // const [persons, setPersons] = useState([\n  //   { name: \"Arto Hellas\", number: \"040-123456\" },\n  //   { name: \"Ada Lovelace\", number: \"39-44-5323523\" },\n  //   { name: \"Dan Abramov\", number: \"12-43-234345\" },\n  //   { name: \"Mary Poppendieck\", number: \"39-23-6423122\" },\n  // ]);\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [isNotificationSuccesful, setIsNotificationSuccesful] = useState(true);\n\n  useEffect(() => {\n    noteService.getAll().then((response) => {\n      setPersons(response.data);\n    });\n  }, []);\n\n  const handleNewName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value);\n  };\n\n  const updatePerson = () => {\n    const personToUpdate = persons.find((person) => person.name === newName);\n    noteService\n      .update(personToUpdate.id, { name: newName, number: newNumber })\n      .then(\n        setPersons(\n          persons.map((person) =>\n            person.id === personToUpdate.id\n              ? { name: newName, number: newNumber }\n              : person\n          )\n        )\n      )\n      .catch(() => {\n        setNotificationMessage(\n          `${personToUpdate.name} has been removed from server. Please reload the page.`\n        );\n        setIsNotificationSuccesful(false);\n      });\n  };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    if (persons.some((person) => person.name === newName)) {\n      // alert(`${newName} is already added to phonebook`);\n      window.confirm(\n        `${newName} is already on phonebook. Replace old number with new one?`\n      ) && updatePerson();\n    } else {\n      // setPersons(persons.concat({ name: newName, number: newNumber }));\n      noteService\n        .create({\n          name: newName,\n          number: newNumber,\n        })\n        .then((response) => {\n          setPersons(persons.concat(response.data));\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setNotificationMessage(`Added ${response.data.name}`);\n          setIsNotificationSuccesful(true);\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const deletePerson = (personToDelete) => {\n    if (!window.confirm(`Delete ${personToDelete.name}?`)) return;\n\n    noteService\n      .remove(personToDelete.id)\n      .then(\n        setPersons(persons.filter((person) => person.id !== personToDelete.id))\n      );\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Filter handleFilter={handleFilter} filter={filter} />\n\n      <h3>Add new person</h3>\n\n      <Notification\n        message={notificationMessage}\n        isSuccesful={isNotificationSuccesful}\n      />\n\n      <PersonForm\n        addPerson={addPerson}\n        handleNewName={handleNewName}\n        newName={newName}\n        handleNewNumber={handleNewNumber}\n        newNumber={newNumber}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons persons={persons} filter={filter} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import axios from 'axios'\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}